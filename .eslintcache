[{"C:\\Projects\\Whatsapp-clone\\src\\index.js":"1","C:\\Projects\\Whatsapp-clone\\src\\App.js":"2","C:\\Projects\\Whatsapp-clone\\src\\chat\\index.js":"3","C:\\Projects\\Whatsapp-clone\\src\\sidebar\\index.js":"4","C:\\Projects\\Whatsapp-clone\\src\\sidebarChat\\index.js":"5","C:\\Projects\\Whatsapp-clone\\src\\firebase.js":"6","C:\\Projects\\Whatsapp-clone\\src\\login\\index.js":"7","C:\\Projects\\Whatsapp-clone\\src\\reducer.js":"8","C:\\Projects\\Whatsapp-clone\\src\\StateProvider.js":"9"},{"size":408,"mtime":1611824340101,"results":"10","hashOfConfig":"11"},{"size":817,"mtime":1611836068085,"results":"12","hashOfConfig":"11"},{"size":3313,"mtime":1611827801110,"results":"13","hashOfConfig":"11"},{"size":1824,"mtime":1611836898491,"results":"14","hashOfConfig":"11"},{"size":1435,"mtime":1611828568826,"results":"15","hashOfConfig":"11"},{"size":633,"mtime":1611681574674,"results":"16","hashOfConfig":"11"},{"size":1046,"mtime":1611824826599,"results":"17","hashOfConfig":"11"},{"size":377,"mtime":1611827864929,"results":"18","hashOfConfig":"11"},{"size":375,"mtime":1611823496042,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"180gf31",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Projects\\Whatsapp-clone\\src\\index.js",[],["41","42"],"C:\\Projects\\Whatsapp-clone\\src\\App.js",["43","44"],"C:\\Projects\\Whatsapp-clone\\src\\chat\\index.js",["45"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { IconButton, Avatar } from \"@material-ui/core\";\r\nimport { AttachFile, MoreVert, SearchOutlined } from \"@material-ui/icons\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport db from \"./../firebase\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport firebase from \"firebase\";\r\n\r\nconst Chat = () => {\r\n  const [seed, setSeed] = useState(\"\");\r\n  const [input, setInput] = useState(\"\");\r\n  const { roomId } = useParams();\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [{ user }, dispatch] = useStateValue();\r\n\r\n  useEffect(() => {\r\n    if (roomId) {\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .onSnapshot((snapshot) => setRoomName(snapshot.data().name));\r\n\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot((snapshot) =>\r\n          setMessages(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n    }\r\n  }, [roomId]);\r\n\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n  }, [roomId]);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    console.log(input);\r\n\r\n    db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\r\n      message: input,\r\n      name: user.displayName,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat__header\">\r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n\r\n        <div className=\"chat__headerInfo\">\r\n          <h3>{roomName}</h3>\r\n          <p>\r\n            Last seen\r\n            {new Date(\r\n              messages[messages.length - 1]?.timestamp?.toDate()\r\n            ).toUTCString()}\r\n          </p>\r\n        </div>\r\n        <div className=\"chat___headerRight\">\r\n          <IconButton>\r\n            <SearchOutlined />\r\n          </IconButton>\r\n          <IconButton>\r\n            <AttachFile />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVert />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className=\"chat__body\">\r\n        {messages.map((message) => (\r\n          <p\r\n            className={`chat__message ${\r\n              message.name === user.displayName && \"chat__reciever\"\r\n            }`}\r\n          >\r\n            <span className=\"chat__name\">{message.name}</span>\r\n            {message.message}\r\n            <span className=\"chat__timetamp\">\r\n              {new Date(message.timestamp?.toDate()).toUTCString()}\r\n            </span>\r\n          </p>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat__footer\">\r\n        <InsertEmoticonIcon />\r\n        <form>\r\n          <input\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"Type a message\"\r\n            type=\"text\"\r\n          />\r\n          <button onClick={sendMessage} type=\"submit\">\r\n            Send a message\r\n          </button>\r\n        </form>\r\n        <MicIcon />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","C:\\Projects\\Whatsapp-clone\\src\\sidebar\\index.js",["46"],"C:\\Projects\\Whatsapp-clone\\src\\sidebarChat\\index.js",[],"C:\\Projects\\Whatsapp-clone\\src\\firebase.js",[],"C:\\Projects\\Whatsapp-clone\\src\\login\\index.js",["47"],"import React from \"react\";\r\nimport \"./styles.css\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { auth, provider } from \"./../firebase\";\r\nimport { actionTypes } from \"../reducer\";\r\nimport { useStateValue } from \"./../StateProvider\";\r\n\r\nconst Login = () => {\r\n  const [{}, dispatch] = useStateValue();\r\n\r\n  const signIn = () => {\r\n    auth\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        dispatch({\r\n          type: actionTypes.SET_USER,\r\n          user: result.user,\r\n        });\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login__container\">\r\n        <img\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/5/5e/WhatsApp_icon.png\"\r\n          alt=\"\"\r\n        />\r\n        <div className=\"login__text\">\r\n          <h1>Sign in to WhatsApp</h1>\r\n        </div>\r\n        <Button type=\"submit\" onClick={signIn}>\r\n          Sign In With Google\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Projects\\Whatsapp-clone\\src\\reducer.js",[],"C:\\Projects\\Whatsapp-clone\\src\\StateProvider.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":2,"column":17,"nodeType":"54","messageId":"55","endLine":2,"endColumn":25},{"ruleId":"52","severity":1,"message":"56","line":10,"column":20,"nodeType":"54","messageId":"55","endLine":10,"endColumn":28},{"ruleId":"52","severity":1,"message":"56","line":18,"column":20,"nodeType":"54","messageId":"55","endLine":18,"endColumn":28},{"ruleId":"52","severity":1,"message":"56","line":14,"column":20,"nodeType":"54","messageId":"55","endLine":14,"endColumn":28},{"ruleId":"57","severity":1,"message":"58","line":9,"column":10,"nodeType":"59","messageId":"60","endLine":9,"endColumn":12},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]